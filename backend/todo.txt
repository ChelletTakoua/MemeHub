
@everyone. These are the tasks that need to be done:

-----@Sallemi + @everyone
|    - implement Controllers and routes:
|        - bch naamlou el routes elli yest7a9hom el front lkol, lezemna donc el lista mtaa el requests elli hachtou behom lfront @Sallemi
|        - brainstormiw el hajet elli inajmou yest7a9hom el front en attendant si Sallemi (check file brainstorming.txt)
_______________________________________________________________


-----@takoua or @chidhi
|    - mailing system:
|        1. search how to send an email (maanaarech si mawjouda fl cours wala bch naamloha wahadna)
|            - est ce que famma faza b php direct
|            - wala fibeli famma XAMPP wahda mel les services elli ma staamalnehomch tab3ath des email. Choufoha w aamlou recherche 3aleha
|        2. create a class that will handle sending emails in the Utils folder
|        juste class generaique feha el fonctionalitÃ© sendMail, sendMail($to, $subject, $message) par exemple
|        Fech bch nestaamloha? to naamlou appel w nahiw fih el mawdhou3
|        propositions mteei: (haja barka tekfi mch lkol, ama nahna srafna srafna nnajmou naamlou akther mn kaaba)
|            - mail de verification de compte (apres l'inscription)
|            - mail de reinitialisation de mot de passe
|            - mail de notification (like, comment, etc.)
_______________________________________________________________



------@fawzi
|    - add tableName / ModelClass / TableManager mapping:
|       1. create a class for each Model that will extend the TableManager class
|       2. add mapping in the modelTableMapping.php file
_______________________________________________________________

-------@fawzi
|    - For each Model:
|        1. rodha t'extendi Model
|            ** $id w getId() definithom fl Model donc tnajjem tna77ehom
|            ** Pour les tables elli fehom foreign keys: (bch nestaamel exemple user_id fi meme)
|                - el attribut ywalli esmou $user fi3oudh $user_id
|                - fel constructeur, taamel
|
|                     public function __construct($id, ... ,$user_id, ...){
|                            $this->id = $id;
|                            ...
|                            $user = new Proxy($user_id, 'User');
|                            ...
|                        }
|
|                - taamel 2 getters:
|                    - getUserId(){ return $this->user->getId();}
|                    - getUser(){ return $this->user->getInstance();}
|
|        2. define jsonSerialize method that will return the object as an associative array
|            Chmaanetha? Ya sidi ben sidek hedhi el methode elli bch t9oul lel json_encode kifeh y7ottou el objet fl format JSON
|            maanetha elli bch t7ottou fl fonction hedhi howa elli bch yetb3ath lel client (frontend)
|            public function jsonSerialize(){
|                return [
|                    'id' => $this->id,
|                    ...
|                    'user' => $this->user, (el proxy yetlhe brohou wahdou, don't worry)
|                    ...
|                ];
|            }
_______________________________________________________________


-------@chidhi
|    - authentication (login, register, logout):
|        *** dhaherli zeyda el recherche fel 7keya hedhi juste hachetna bel database tarka7 w barra
|        1. el 5edma lkol bch tkoun fl classe Auth (tnajjem tansana3 classes o5rin elli t7eb testaamalhom bien sur, ahawka el folder Utils 3ala dhemtek)
|        1. en fin de compte naamloha kima elli mawjouda deja fl classe Auth ( user logged in <==> $_SESSION['user_id'] is set )
|        3. wa9tli hachtek b requete ml base de donnees juste aamel comment wala ayy haja w e3taber anni el requete tba3thet.
|        juste kammel el logique w baaed to nriglou el database m3a louey
|
|     ****** @CHIDHIII: check notes file ******
_______________________________________________________________



-------@Sioua + 3ayet lchkoun e5r m3ak
|    - implement queries in the table managers for each table
|        *** jawek behi sioua 3andi thi9a fik tgued rohek meghir steps hhhh. Aamelhom enty el steps ma3andich fekra wadh7a ena
|        juste hachetna melle5er bel hajet hedhom: (asra7 implementehom kima t7eb)
|            - Des methodes fi kol tableManager lel les requetes elli hachtna behom (select, insert, update, delete)
|            - Fi kol table manager famma function tasna3lek el objet Model mel reponse mtaa requete SQL.
_______________________________________________________________









@everyone:
    - add basic query functions smth like : "Select * from __ where" . implode("AND" , "$primarykey[i]=$value")
    - add attribute number of likes to the meme and like class to the model
    - add proxies instead of ids as foreign keys (??)
    - add roles to users in model
    - add models (classes metiers)

    - Authentication (login, register, logout)

    - Add database classes








- structure the project in a way that it is extendable and easy to maintain
- add a readme file that explains how to run the project



-this is how the database classes can be structured:
    - A DatabaseConnection Class that will handle the connection to the database ( getConnection() )
    - A DatabaseQuery Class that will handle the queries to the database ( select(), insert(), update(), delete() )
    - classes for each table in the database that will extend the DatabaseQuery class and will have the table name as a property

- modify the HttpException so it has a title and a message (for displaying the error in a user-friendly way in the frontend
- tell yassine about the http interceptor in angular that will handle the error messages and if there is such a thing in react
- propose add modal in react. (report button for example)

- instead of requireLogin, maybe add a property in Route that will be an array of roles that are allowed to access the route (null if no authentication is required for example, ['admin'] if only admins can access the route and ['admin', 'user'] if both admins and users can access the route)


DONE:
    - added general infrastructure ( router, autoload, httpException handling, etc. )
    - added autoloader
    - made error handling more robust by adding a custom exception handler that catches all uncaught exceptions and returns a json response with the error message
    - added some text to explain how the project is structured and how to work with it
    - cleaned up the code a bit





